when you convert string into input string from a keyboard to read word by word 
#include <iostream>
#include <sstream>
#include <string>
using namespace std;

int main() 
{   int p=0,c=0,i;
    std::string s = "luffy is still joyboy";
    std::istringstream iss(s); ----------------->then use this stl fn.
    for(i=s.size()-1;i>=0;i--)
    {
       if(s[i]==' ' && p==1)
       {
          break;
       }
       if(s[i]!=' ')
       {
        c=c+1;
         p=1;
       }
    }
    cout<<c;
    return 0;
}----------------------------------------------------------------------------------


ðŸ§  So what happens?
If you do:

cpp
Copy
Edit
cout << "Enter a value:";
Nothing forces that message to immediately appear on the screen. It might just sit in the buffer until:

You add a newline (\n)

Or use endl (which adds a newline and flushes)

Or the buffer fills up

Or the program ends
-----------------------------------------------------------------------------------


.//MATHS 
Function | Description
pow(x, y) | xyx^yxy
sqrt(x) | Square root
cbrt(x) | Cube root
hypot(x, y) | x2+y2\sqrt{x^2 + y^2}x2+y2â€‹


//TO CHECK WHEATHER CHARACTER IS A TO Z and a to z  AND 0-9 OR NOT .
#include <iostream>
#include <vector>
using namespace std;



int main()
{
    // check palindrome or not
    string s;
    cout<<"Enter the strings to check palindrome or not= ";
    getline(cin,s);
    cout<<s;
    int l,r;
    l=0,r=s.size()-1;
    // cout<<s;
    // cout<<l<<r;
    for (int i = 0; i < s.size(); i++)
     {
    s[i] = tolower(s[i]);
     }
    //   

    
    while(l<r)
    {
       
        if(!isalnum(s[l]))
        {
            l++;
        }

        else if(!isalnum(s[r]))
        {
            r--;
        }
       else if(s[l]==s[r] ) 
        {
            l++;
            r--;
        }
        
        else if(s[l]==' ')
        {
           l++;     
        } 

         else if(s[r]==' ')
        {
           r--;     
        } 

        else 
        {
           cout<<" Not a palindrome number";
           exit(1);
        }
        
        
    }
    cout<<" palindrome Number";
    
    return 0;
 
    
    
}

//CONVERT STRING INTO LOWER 

1>METHOD
   string s = "A man, a plan, a canal: Panama";
    
    // sabko lowercase karo
    transform(s.begin(), s.end(), s.begin(), ::tolower);




2>METHOD

  for (int i = 0; i < s.size(); i++)
{
    s[i] = tolower(s[i]);
}
//transform(start, end, destination, function);




---------------------------------------------------------------------------------------------------------------------------------------


//âœ… Option 1: getline() with istringstream (runtime ya already given string se line lena)
cpp
Copy
Edit
#include <iostream>
#include <sstream>
#include <string>
using namespace std;

int main() {
    string input = "Sonu Kumar loves coding";
    istringstream iss(input);  // input ko stream bana diya
    string line;
    getline(iss, line);        // cin ki jagah iss
    cout << "Line: " << line << endl;
}


-------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    bool isPalindrome(string s) 
    {

    istringstream iss(s);  // input ko stream bana diya
    string str;
    getline(iss, str);        // cin ki jagah iss
    int l,r;
    l=0,r=str.size()-1;
    // cout<<s;
    // cout<<l<<r;
    for (int i = 0; i < str.size(); i++)
     {
    str[i] = tolower(str[i]);
     }
    //   

    
    while(l<r)
    {
       
        if(!isalnum(str[l]))
        {
            l++;
        }

        else if(!isalnum(str[r]))
        {
            r--;
        }
       else if(str[l]==str[r] ) 
        {
            l++;
            r--;
        }
        
        else if(str[l]==' ')
        {
           l++;     
        } 

         else if(str[r]==' ')
        {
           r--;     
        } 

        else 
        {
           return false;
        }
        
        
    }
    return true;
    
  
    }

    
 
    
    



      
    
};
